name: CI/CD Pipeline

on:
  push:
    branches: ["Development", "main"]  # Focus on essential branches
  pull_request:
    branches: ["Development", "main"]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Step 1: Run Super-Linter with modified scope
      - name: Run linter on changed files
        uses: github/super-linter@v4
        env:
          VALIDATE_ALL_CODEBASE: false  # Only lint changed files
          DEFAULT_BRANCH: "main"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build_and_test:
    runs-on: ubuntu-latest
    needs: lint  # This ensures build_and_test waits for lint job to finish
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Step 2: Install dependencies
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y g++ make valgrind

      # Step 3: Build the application and unit tests
      - name: Build application
        run: |
          cd System
          make clean  # Clean previous builds
          make all    # Build all targets, including unit tests

      # Step 4: Run unit tests with Valgrind
      - name: Run unit tests with Valgrind
        run: |
          cd System
          make unit_run
        continue-on-error: true  # Continue even if Valgrind finds issues

      # Step 5: Save Valgrind output as an artifact
      - name: Upload Valgrind log
        uses: actions/upload-artifact@v3
        with:
          name: valgrind-log
          path: valgrind_log.txt
